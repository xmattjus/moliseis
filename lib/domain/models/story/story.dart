import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import 'package:moliseis/domain/models/attraction/attraction.dart';
import 'package:objectbox/objectbox.dart';

part 'story.g.dart';

@immutable
@Entity()
@JsonSerializable()
class Story {
  @Id(assignable: true)
  final int id;

  @Index()
  final String title;

  final String author;

  @JsonKey(name: 'short_description')
  final String shortDescription;

  final List<String> sources;

  @JsonKey(name: 'attraction_id')
  final int backlinkId;

  @Property(type: PropertyType.dateNano)
  @JsonKey(name: 'created_at')
  final DateTime createdAt;

  @Property(type: PropertyType.dateNano)
  @JsonKey(name: 'modified_at')
  final DateTime modifiedAt;

  @_AttractionRelToOneConverter()
  final ToOne<Attraction> attraction;

  const Story({
    required this.id,
    required this.title,
    required this.author,
    required this.shortDescription,
    required this.sources,
    required this.backlinkId,
    required this.createdAt,
    required this.modifiedAt,
    required this.attraction,
  });

  @override
  bool operator ==(Object other) =>
      other is Story &&
      other.id == id &&
      other.title == title &&
      other.shortDescription == shortDescription &&
      // other.sources == sources &&
      other.backlinkId == backlinkId &&
      other.createdAt.isAtSameMomentAs(createdAt) &&
      other.modifiedAt.isAtSameMomentAs(modifiedAt);

  @override
  int get hashCode => Object.hash(
    id,
    title,
    author,
    shortDescription,
    Object.hashAll(sources),
    backlinkId,
    createdAt,
    modifiedAt,
  );

  Story copyWith({
    String? title,
    String? author,
    String? shortDescription,
    List<String>? sources,
    int? backlinkId,
    DateTime? createdAt,
    DateTime? modifiedAt,
    ToOne<Attraction>? attraction,
  }) {
    return Story(
      id: id,
      title: title ?? this.title,
      author: author ?? this.author,
      shortDescription: shortDescription ?? this.shortDescription,
      sources: sources ?? this.sources,
      backlinkId: backlinkId ?? this.backlinkId,
      createdAt: createdAt ?? this.createdAt,
      modifiedAt: modifiedAt ?? this.modifiedAt,
      attraction: attraction ?? this.attraction,
    );
  }

  /// Creates a new [Story] from a Json string.
  ///
  /// The implementation of this method is generated by build_runner and
  /// the json_serializable package.
  factory Story.fromJson(Map<String, dynamic> json) => _$StoryFromJson(json);

  /// Converts a [Story] to a Json string.
  ///
  /// The implementation of this method is generated by build_runner and
  /// the json_serializable package.
  Map<String, dynamic> toJson() => _$StoryToJson(this);
}

class _AttractionRelToOneConverter
    implements JsonConverter<ToOne<Attraction>, Map<String, dynamic>?> {
  const _AttractionRelToOneConverter();

  @override
  ToOne<Attraction> fromJson(Map<String, dynamic>? json) => ToOne<Attraction>(
    target: json == null ? null : Attraction.fromJson(json),
  );

  @override
  Map<String, dynamic>? toJson(ToOne<Attraction> rel) => rel.target?.toJson();
}
