import 'package:json_annotation/json_annotation.dart';
import 'package:meta/meta.dart';
import 'package:moliseis/domain/models/attraction/attraction.dart';
import 'package:objectbox/objectbox.dart';

part 'molis_image.g.dart';

@immutable
@Entity()
@JsonSerializable()
class MolisImage {
  @Id(assignable: true)
  final int id;

  final String title;

  final String author;

  final String license;

  @JsonKey(name: 'license_url')
  final String licenseUrl;

  final String url;

  final int width;

  final int height;

  @Property(type: PropertyType.dateNano)
  @JsonKey(name: 'created_at')
  final DateTime createdAt;

  @Property(type: PropertyType.dateNano)
  @JsonKey(name: 'modified_at')
  final DateTime modifiedAt;

  @JsonKey(name: 'attraction_id')
  final int backlinkId;

  @_AttractionRelToOneConverter()
  final ToOne<Attraction> attraction;

  const MolisImage({
    required this.id,
    required this.title,
    required this.author,
    required this.license,
    required this.licenseUrl,
    required this.url,
    required this.width,
    required this.height,
    required this.createdAt,
    required this.modifiedAt,
    required this.backlinkId,
    required this.attraction,
  });

  @override
  bool operator ==(Object other) =>
      other is MolisImage &&
      other.title == title &&
      other.author == author &&
      other.license == license &&
      other.licenseUrl == licenseUrl &&
      other.url == url &&
      other.width == width &&
      other.height == height &&
      other.createdAt.isAtSameMomentAs(createdAt) &&
      other.modifiedAt.isAtSameMomentAs(modifiedAt) &&
      other.backlinkId == backlinkId;

  @override
  int get hashCode => Object.hash(
    title,
    author,
    license,
    licenseUrl,
    url,
    width,
    height,
    createdAt,
    modifiedAt,
    backlinkId,
  );

  /// Creates a copy of this object with the given fields updated.
  MolisImage copyWith({
    String? title,
    String? author,
    String? license,
    String? licenseUrl,
    String? url,
    int? width,
    int? height,
    DateTime? createdAt,
    DateTime? modifiedAt,
    int? backlinkId,
  }) {
    final copy = MolisImage(
      id: id,
      title: title ?? this.title,
      author: author ?? this.author,
      license: license ?? this.license,
      licenseUrl: licenseUrl ?? this.licenseUrl,
      url: url ?? this.url,
      width: width ?? this.width,
      height: height ?? this.height,
      createdAt: createdAt ?? this.createdAt,
      modifiedAt: modifiedAt ?? this.modifiedAt,
      backlinkId: backlinkId ?? this.backlinkId,
      attraction: attraction,
    );

    /// Prepares the other Box this object relates to, to be updated once this
    /// object has been put in its own Box.
    copy.attraction.targetId = backlinkId ?? this.backlinkId;

    return copy;
  }

  /// Creates a new [MolisImage] from a Json string.
  ///
  /// The implementation of this method is generated by build_runner and
  /// the json_serializable package.
  factory MolisImage.fromJson(Map<String, dynamic> json) =>
      _$MolisImageFromJson(json);

  /// Converts a [MolisImage] to a Json string.
  ///
  /// The implementation of this method is generated by build_runner and
  /// the json_serializable package.
  Map<String, dynamic> toJson() => _$MolisImageToJson(this);
}

class _AttractionRelToOneConverter
    implements JsonConverter<ToOne<Attraction>, Map<String, dynamic>?> {
  const _AttractionRelToOneConverter();

  @override
  ToOne<Attraction> fromJson(Map<String, dynamic>? json) => ToOne<Attraction>(
    target: json == null ? null : Attraction.fromJson(json),
  );

  @override
  Map<String, dynamic>? toJson(ToOne<Attraction> rel) => rel.target?.toJson();
}
